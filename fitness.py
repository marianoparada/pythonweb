import streamlit as st
import random
import time
from docx import Document
from docx.shared import Inches
import io

def guardar_rutina_word(rutina):
    doc = Document()
    doc.add_heading('FA FITNESS - Rutina Personalizada', 0)

    vuelta_actual = 1
    for grupo, ejercicio, duracion, instruccion, vuelta, num_ejercicio, total_ejercicios in rutina:
        if vuelta != vuelta_actual:
            doc.add_paragraph('---')
            doc.add_paragraph(f'Vuelta {vuelta}')
            vuelta_actual = vuelta
        if grupo == "Descanso":
            if ejercicio == "Descanso entre vueltas":
                doc.add_paragraph(f'Descanso entre vueltas: {duracion} segundos')
            else:
                doc.add_paragraph(f'Descanso: {duracion} segundos')
        else:
            doc.add_paragraph(f'Ejercicio {num_ejercicio}/{total_ejercicios}: {grupo} - {ejercicio}: {duracion} segundos')
            doc.add_paragraph(f'Instrucci√≥n: {instruccion}')

    # Guardar el documento en un objeto BytesIO
    buffer = io.BytesIO()
    doc.save(buffer)
    buffer.seek(0)

    # Bot√≥n de descarga
    st.download_button(
        label="Guardar Rutina",
        data=buffer,
        file_name="FA_FITNESS_Rutina.docx",
        mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        key="descargar_rutina"
    )
# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="FA FITNESS - Generador de Rutinas", layout="wide")


ejercicios = {
    "üí™ Brazos": [
        ("Curl de b√≠ceps (mancuernas)", "De pie, sostenga una mancuerna en cada mano con los brazos extendidos. Doble los codos para levantar las mancuernas hacia los hombros, luego baje lentamente."),
        ("Extensiones de tr√≠ceps (mancuernas)", "Si√©ntese o p√≥ngase de pie con una mancuerna sostenida con ambas manos sobre la cabeza. Baje la mancuerna detr√°s de la cabeza doblando los codos, luego extienda los brazos."),
        ("Flexiones de brazos", "Acu√©stese boca abajo con las manos apoyadas en el suelo al ancho de los hombros. Empuje el cuerpo hacia arriba manteniendo el cuerpo recto, luego baje."),
        ("Fondos de tr√≠ceps (silla)", "Si√©ntese en el borde de una silla, coloque las manos a los lados y deslice el cuerpo hacia adelante. Baje el cuerpo doblando los codos y luego empuje hacia arriba."),
        ("Curl martillo (mancuernas)", "De pie, sostenga una mancuerna en cada mano con las palmas hacia el cuerpo. Doble los codos para levantar las mancuernas hacia los hombros, luego baje lentamente."),
        ("Flexiones diamante", "Acu√©stese boca abajo con las manos juntas formando un diamante debajo del pecho. Empuje el cuerpo hacia arriba manteniendo el cuerpo recto, luego baje."),
        ("Curl de b√≠ceps concentrado (mancuernas)", "Si√©ntese en un banco, sostenga una mancuerna en una mano y apoye el codo en el muslo. Doble el codo para levantar la mancuerna, luego baje lentamente."),
        ("Extensiones de tr√≠ceps con cuerda (m√°quina)", "De pie, sostenga la cuerda conectada a la m√°quina de polea alta con ambas manos. Baje la cuerda doblando los codos, luego extienda los brazos."),
        ("Curl de b√≠ceps en banco inclinado (mancuernas)", "Si√©ntese en un banco inclinado, sostenga una mancuerna en cada mano con los brazos colgando hacia abajo. Doble los codos para levantar las mancuernas hacia los hombros, luego baje lentamente."),
        ("Extensiones de tr√≠ceps sobre la cabeza (mancuernas)", "Si√©ntese o p√≥ngase de pie con una mancuerna sostenida con ambas manos sobre la cabeza. Baje la mancuerna detr√°s de la cabeza doblando los codos, luego extienda los brazos.")
    ],
    "ü¶µ Piernas": [
        ("Sentadillas", "De pie con los pies separados al ancho de los hombros, baje el cuerpo como si fuera a sentarse en una silla invisible, manteniendo el pecho erguido. Luego, vuelva a la posici√≥n inicial."),
        ("Estocadas", "De pie, d√© un paso largo hacia adelante con una pierna. Baje el cuerpo hasta que ambas rodillas est√©n dobladas en √°ngulos de 90 grados. Empuje hacia atr√°s para volver a la posici√≥n inicial y alterne las piernas."),
        ("Peso muerto (barra)", "De pie con los pies separados al ancho de los hombros, sostenga una barra frente a los muslos. Incl√≠nese hacia adelante desde las caderas, manteniendo la espalda recta, hasta que la barra llegue a las espinillas. Luego, vuelva a la posici√≥n inicial."),
        ("Elevaciones de talones", "De pie, lev√°ntese sobre los dedos de los pies, manteniendo las rodillas rectas. Baje lentamente los talones hacia el suelo."),
        ("Puente de gl√∫teos", "Acu√©stese boca arriba con las rodillas dobladas y los pies apoyados en el suelo. Levante las caderas hacia el techo, apretando los gl√∫teos, luego baje lentamente."),
        ("Prensa de pierna (m√°quina)", "Si√©ntese en la m√°quina de prensa de pierna con los pies apoyados en la plataforma. Empuje la plataforma hacia adelante hasta que las piernas est√©n extendidas, luego baje lentamente."),
        ("Extensiones de pierna (m√°quina)", "Si√©ntese en la m√°quina de extensi√≥n de pierna con las piernas debajo de la almohadilla. Extienda las piernas hacia adelante, luego baje lentamente."),
        ("Curl de pierna (m√°quina)", "Acu√©stese boca abajo en la m√°quina de curl de pierna con los tobillos debajo de la almohadilla. Doble las rodillas para levantar la almohadilla hacia los gl√∫teos, luego baje lentamente."),
        ("Sentadillas b√∫lgaras (mancuernas)", "De pie, coloque un pie en un banco detr√°s de usted y sostenga una mancuerna en cada mano. Baje el cuerpo doblando la rodilla de la pierna delantera, luego empuje hacia arriba."),
        ("Saltos al caj√≥n", "De pie frente a un caj√≥n, salte con ambos pies para aterrizar en el caj√≥n, luego baje de un paso.")
    ],
    "üèãÔ∏è Abdominales": [
        ("Abdominales", "Acu√©stese boca arriba con las rodillas dobladas y los pies apoyados en el suelo. Levante la parte superior del cuerpo hacia las rodillas, luego baje lentamente."),
        ("Plancha", "Acu√©stese boca abajo con los antebrazos apoyados en el suelo y los codos debajo de los hombros. Levante el cuerpo manteni√©ndolo recto desde la cabeza hasta los pies."),
        ("Giros rusos", "Si√©ntese en el suelo con las rodillas dobladas y los pies elevados. Sostenga un peso con ambas manos y gire el torso de un lado a otro."),
        ("Elevaciones de piernas", "Acu√©stese boca arriba con las piernas rectas. Levante las piernas hacia el techo hasta que los gl√∫teos se despeguen del suelo, luego baje lentamente."),
        ("Bicicleta", "Acu√©stese boca arriba con las manos detr√°s de la cabeza y las piernas levantadas. Alterne llevando el codo hacia la rodilla opuesta mientras extiende la otra pierna."),
        ("Plancha lateral", "Acu√©stese de lado con un antebrazo apoyado en el suelo y el codo debajo del hombro. Levante el cuerpo manteni√©ndolo recto desde la cabeza hasta los pies."),
        ("Crunch inverso", "Acu√©stese boca arriba con las piernas dobladas y los pies elevados. Levante las caderas hacia el techo, luego baje lentamente."),
        ("Escaladores", "Empiece en posici√≥n de flexi√≥n de brazos. Lleve una rodilla hacia el pecho, luego alterne r√°pidamente las piernas."),
        ("V-ups", "Acu√©stese boca arriba con los brazos extendidos sobre la cabeza. Levante simult√°neamente las piernas y el torso para tocarse los pies, luego baje lentamente."),
        ("Plancha con elevaci√≥n de brazo", "Empiece en posici√≥n de plancha. Levante un brazo extendido hacia adelante, luego alterne los brazos.")
    ],
    "üèãÔ∏è Hombros": [
        ("Press militar (mancuernas)", "De pie o sentado, sostenga una mancuerna en cada mano a la altura de los hombros. Empuje las mancuernas hacia arriba hasta que los brazos est√©n extendidos, luego baje lentamente."),
        ("Elevaciones laterales (mancuernas)", "De pie, sostenga una mancuerna en cada mano a los lados. Levante los brazos hacia los lados hasta que est√©n a la altura de los hombros, luego baje lentamente."),
        ("Face pulls (cable)", "De pie, sostenga la cuerda conectada a la m√°quina de polea alta con ambas manos. Tire de la cuerda hacia la cara, manteniendo los codos altos."),
        ("Press Arnold (mancuernas)", "Sentado, sostenga una mancuerna en cada mano a la altura de los hombros con las palmas hacia adentro. Gire las palmas hacia afuera mientras empuja las mancuernas hacia arriba, luego baje lentamente."),
        ("Elevaciones frontales (mancuernas)", "De pie, sostenga una mancuerna en cada mano frente a los muslos. Levante los brazos hacia adelante hasta que est√©n a la altura de los hombros, luego baje lentamente."),
        ("Remo al ment√≥n (barra)", "De pie, sostenga una barra con las manos juntas frente a los muslos. Levante la barra hacia el ment√≥n, manteniendo los codos altos, luego baje lentamente."),
        ("Encogimientos de hombros (mancuernas)", "De pie, sostenga una mancuerna en cada mano a los lados. Levante los hombros hacia las orejas, luego baje lentamente."),
        ("Elevaciones posteriores (mancuernas)", "De pie, incl√≠nese hacia adelante desde las caderas con una mancuerna en cada mano. Levante los brazos hacia los lados hasta que est√©n a la altura de los hombros, luego baje lentamente."),
        ("Press de hombros con barra", "Sentado o de pie, sostenga una barra a la altura de los hombros con las palmas hacia adelante. Empuje la barra hacia arriba hasta que los brazos est√©n extendidos, luego baje lentamente."),
        ("Remo con barra en T", "De pie, incl√≠nese hacia adelante desde las caderas y sostenga una barra en T con ambas manos. Tire de la barra hacia el pecho, luego baje lentamente.")
    ],
    "üèÉ Aer√≥bico": [
        ("Saltar la soga", "Salte con ambos pies mientras gira la soga por encima y por debajo del cuerpo."),
        ("Burpees", "Desde una posici√≥n de pie, ag√°chese y coloque las manos en el suelo. Salte los pies hacia atr√°s para llegar a una posici√≥n de flexi√≥n, haga una flexi√≥n, salte los pies hacia adelante y lev√°ntese saltando."),
        ("Escaladores", "Empiece en posici√≥n de flexi√≥n de brazos. Lleve una rodilla hacia el pecho, luego alterne r√°pidamente las piernas."),
        ("Correr", "Corra a un ritmo constante durante un per√≠odo de tiempo o distancia."),
        ("Piques", "Corra a m√°xima velocidad durante una distancia corta, luego descanse y repita."),
        ("Saltos de tijera", "Desde una posici√≥n de pie, salte abriendo las piernas y levantando los brazos por encima de la cabeza, luego vuelva a la posici√≥n inicial."),
        ("Rodillas altas", "Corra en el lugar llevando las rodillas lo m√°s alto posible."),
        ("Trote en el lugar", "Corra suavemente en el lugar, levantando los pies del suelo."),
        ("Escaladores", "Empiece en posici√≥n de flexi√≥n de brazos. Lleve una rodilla hacia el pecho, luego alterne r√°pidamente las piernas."),
        ("Saltos al banco", "De pie frente a un banco, salte con ambos pies para aterrizar en el banco, luego baje de un paso.")
    ]
}

# Distribuci√≥n de ejercicios seg√∫n la priorizaci√≥n (sin cambios)
distribucion_ejercicios = {
    "Tren superior": {"üí™ Brazos": 3, "üèãÔ∏è Hombros": 2, "üèãÔ∏è Abdominales": 1, "ü¶µ Piernas": 1, "üèÉ Aer√≥bico": 1},
    "Zona media": {"üèãÔ∏è Abdominales": 3, "üí™ Brazos": 2, "ü¶µ Piernas": 1, "üèãÔ∏è Hombros": 1, "üèÉ Aer√≥bico": 1},
    "Tren inferior": {"ü¶µ Piernas": 3, "üèãÔ∏è Abdominales": 2, "üí™ Brazos": 1, "üèãÔ∏è Hombros": 1, "üèÉ Aer√≥bico": 1},
    "Aer√≥bico": {"üèÉ Aer√≥bico": 3, "ü¶µ Piernas": 2, "üí™ Brazos": 1, "üèãÔ∏è Abdominales": 1, "üèãÔ∏è Hombros": 1}
}

def generar_rutina(prioridad, duracion, tiempo_descanso, vueltas):
    rutina_base = []
    for grupo, cantidad in distribucion_ejercicios[prioridad].items():
        ejercicios_grupo = random.sample(ejercicios[grupo], cantidad)
        for ejercicio, instruccion in ejercicios_grupo:
            if duracion == "Ambos aleatorios":
                tiempo = random.choice([30, 40])
            else:
                tiempo = int(duracion.split()[0])
            rutina_base.append((grupo, ejercicio, tiempo, instruccion))
    
    rutina_completa = []
    for vuelta in range(1, vueltas + 1):
        for i, ejercicio in enumerate(rutina_base, 1):
            grupo, nombre_ejercicio, tiempo, instruccion = ejercicio
            rutina_completa.append((grupo, nombre_ejercicio, tiempo, instruccion, vuelta, i, len(rutina_base)))
            if i < len(rutina_base):  # A√±adir descanso despu√©s de cada ejercicio, excepto el √∫ltimo
                rutina_completa.append(("Descanso", "Descanso entre ejercicios", tiempo_descanso, "Toma un breve descanso antes del siguiente ejercicio", vuelta, None, None))
        if vuelta < vueltas:  # A√±adir descanso largo entre vueltas
            rutina_completa.append(("Descanso", "Descanso entre vueltas", tiempo_descanso * 5, "Toma un descanso m√°s largo antes de la siguiente vuelta", vuelta, None, None))
    
    return rutina_completa

def mostrar_rutina(rutina):
    st.title("üèãÔ∏è FA FITNESS - Rutina Personalizada")
    vuelta_actual = 1
    for grupo, ejercicio, duracion, instruccion, vuelta, num_ejercicio, total_ejercicios in rutina:
        if vuelta != vuelta_actual:
            st.write("---")
            st.write(f"Vuelta {vuelta}")
            vuelta_actual = vuelta
        if grupo == "Descanso":
            if ejercicio == "Descanso entre vueltas":
                st.write(f"Descanso entre vueltas: {duracion} segundos")
            else:
                st.write(f"Descanso: {duracion} segundos")
        else:
            st.write(f"Ejercicio {num_ejercicio}/{total_ejercicios}: {grupo} - {ejercicio}: {duracion} segundos")
            st.write(f"Instrucci√≥n: {instruccion}")

def temporizador(rutina):
    st.title("üèãÔ∏è FA FITNESS - Temporizador de Rutina")
    
    if 'ejercicio_actual' not in st.session_state:
        st.session_state.ejercicio_actual = 0
        st.session_state.tiempo_restante = rutina[0][2]
    
    grupo, ejercicio, duracion, instruccion, vuelta, num_ejercicio, total_ejercicios = rutina[st.session_state.ejercicio_actual]
    
    col1, col2, col3 = st.columns([1,2,1])
    with col2:
        if grupo != "Descanso":
            st.markdown(f"<h3 style='text-align: center;'>Vuelta {vuelta}/{st.session_state.vueltas} - Ejercicio {num_ejercicio}/{total_ejercicios}</h3>", unsafe_allow_html=True)
        
        if grupo == "Descanso":
            if ejercicio == "Descanso entre vueltas":
                st.markdown("<h1 style='text-align: center;'>Descanso entre vueltas</h1>", unsafe_allow_html=True)
            else:
                st.markdown("<h1 style='text-align: center;'>Descanso</h1>", unsafe_allow_html=True)
            # Mostrar el pr√≥ximo ejercicio
            proximo_indice = st.session_state.ejercicio_actual + 1
            if proximo_indice < len(rutina):
                proximo_ejercicio = rutina[proximo_indice][1]
                st.markdown(f"<h3 style='text-align: center;'>Pr√≥ximo ejercicio: {proximo_ejercicio}</h3>", unsafe_allow_html=True)
        else:
            st.markdown(f"<h1 style='text-align: center;'>{grupo}</h1>", unsafe_allow_html=True)
            st.markdown(f"<h2 style='text-align: center;'>{ejercicio}</h2>", unsafe_allow_html=True)
            st.markdown(f"<p style='text-align: center;'>{instruccion}</p>", unsafe_allow_html=True)
        
        progress = st.progress(0)
        tiempo_texto = st.empty()
        
        if st.button("Pausar/Reanudar", key="pausar_reanudar"):
            st.session_state.timer_running = not st.session_state.timer_running
    
    if st.session_state.timer_running:
        progress.progress(1 - st.session_state.tiempo_restante / duracion)
        tiempo_texto.markdown(f"<h3 style='text-align: center;'>{st.session_state.tiempo_restante} segundos</h3>", unsafe_allow_html=True)
        
        time.sleep(1)
        st.session_state.tiempo_restante -= 1
        
        if st.session_state.tiempo_restante < 0:
            st.session_state.ejercicio_actual += 1
            if st.session_state.ejercicio_actual < len(rutina):
                st.session_state.tiempo_restante = rutina[st.session_state.ejercicio_actual][2]
            else:
                st.success("¬°Felicidades! Has completado tu rutina.")
                if st.button("Volver al inicio", key="volver_inicio"):
                    for key in list(st.session_state.keys()):
                        del st.session_state[key]
                    st.experimental_rerun()
                return
        
        st.experimental_rerun()

def main():
    if 'rutina' not in st.session_state:
        st.title("üèãÔ∏è FA FITNESS - Generador de Rutinas")
        
        prioridad = st.selectbox(
            "Selecciona la prioridad de tu rutina:",
            ["Tren superior", "Zona media", "Tren inferior", "Aer√≥bico"]
        )
        
        duracion = st.selectbox(
            "Selecciona la duraci√≥n de los ejercicios:",
            ["30 segundos", "40 segundos", "Ambos aleatorios"]
        )
        
        tiempo_descanso = st.number_input(
            "Selecciona el tiempo de descanso entre ejercicios (en segundos):",
            min_value=5,
            max_value=60,
            value=15,
            step=5
        )
        
        vueltas = st.number_input(
            "N√∫mero de vueltas:",
            min_value=1,
            max_value=10,
            value=1
        )
        
        if st.button("Generar Rutina", key="generar_rutina"):
            with st.spinner("Generando tu rutina personalizada..."):
                time.sleep(2)  # Espera 2 segundos
                st.session_state.rutina = generar_rutina(prioridad, duracion, tiempo_descanso, vueltas)
                st.session_state.prioridad = prioridad
                st.session_state.duracion = duracion
                st.session_state.tiempo_descanso = tiempo_descanso
                st.session_state.vueltas = vueltas
            st.success("¬°Rutina generada con √©xito!")
            st.experimental_rerun()
    
    elif 'timer_running' not in st.session_state:
        col1, col2, col3 = st.columns([1,2,1])
        with col2:
            st.markdown(
                """
                <style>
                div.stButton > button {
                    width: 100%;
                    height: 3em;
                    font-size: 20px;
                }
                </style>
                """, 
                unsafe_allow_html=True
            )
            if st.button("Comenzar Rutina", key="comenzar_rutina"):
                st.session_state.timer_running = True
                st.session_state.ejercicio_actual = 0
                st.session_state.tiempo_restante = st.session_state.rutina[0][2]
                st.experimental_rerun()
            
            guardar_rutina_word(st.session_state.rutina)
    
    else:
        temporizador(st.session_state.rutina)

if __name__ == "__main__":
    main()